{"version":3,"file":"208.1c5d75c9c5d2265c.js","mappings":"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","names":["BridgeStatusCode","USER_INTERACTION_REQUIRED","USER_CANCEL","NO_NETWORK","TRANSIENT_ERROR","PERSISTENT_ERROR","DISABLED","ACCOUNT_UNAVAILABLE","NESTED_APP_AUTH_UNAVAILABLE","NestedAppAuthAdapter","constructor","clientId","clientCapabilities","crypto","logger","this","toNaaSilentTokenRequest","request","extraParams","undefined","extraQueryParameters","Map","Object","entries","userObjectId","account","homeAccountId","authority","scope","scopes","join","correlationId","createNewGuid","prompt","claims","authenticationScheme","extraParameters","toNaaTokenRequest","nonce","state","fromNaaTokenResponse","response","expiresOn","Date","TimeUtils","nowSeconds","expires_in","fromNaaAccountInfo","environment","uniqueId","tenantId","split","idToken","id_token","idTokenClaims","accessToken","access_token","fromCache","tokenType","requestId","extExpiresOn","fromAccount","tokenClaims","AuthToken","base64Decode","username","localAccountId","name","fromBridgeError","error","isBridgeError","status","AuthError","ClientAuthError","ClientAuthErrorCodes","code","description","ServerError","InteractionRequiredAuthError","NestedAppAuthErrorMessage","desc","NestedAppAuthError","errorCode","errorMessage","super","setPrototypeOf","prototype","createUnsupportedError","NestedAppAuthController","operatingContext","proxy","getBridgeProxy","Error","bridgeProxy","config","getConfig","getLogger","performanceClient","telemetry","client","browserCrypto","isBrowserEnvironment","CryptoOps","DEFAULT_CRYPTO_IMPLEMENTATION","eventHandler","EventHandler","nestedAppAuthAdapter","auth","getBrowserStorage","getEventHandler","createController","_asyncToGenerator","controller","Promise","resolve","initialize","acquireTokenInteractive","_this","emitEvent","EventType","ACQUIRE_TOKEN_START","InteractionType","Popup","atPopupMeasurement","startMeasurement","PerformanceEvents","AcquireTokenPopup","add","nestedAppAuthRequest","naaRequest","getTokenInteractive","result","setActiveAccount","ACQUIRE_TOKEN_SUCCESS","accessTokenSize","length","idTokenSize","end","success","e","ACQUIRE_TOKEN_FAILURE","subErrorCode","subError","acquireTokenSilentInternal","_this2","Silent","ssoSilentMeasurement","SsoSilent","increment","visibilityChangeCount","getTokenSilent","acquireTokenPopup","_this3","acquireTokenRedirect","acquireTokenSilent","silentRequest","_this4","acquireTokenByCode","acquireTokenNative","apiId","accountId","acquireTokenByRefreshToken","commonRequest","addEventCallback","callback","removeEventCallback","callbackId","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getAccount","accountFilter","getAccountByHomeId","currentAccount","getActiveAccount","getAccountByLocalId","localId","getAccountByUsername","userName","getAllAccounts","handleRedirectPromise","hash","loginPopup","loginRedirect","logout","logoutRequest","logoutRedirect","logoutPopup","ssoSilent","getTokenCache","setLogger","warning","initializeWrapperLibrary","sku","version","setNavigationClient","navigationClient","getConfiguration","isBrowserEnv","getBrowserCrypto","getPerformanceClient","getRedirectResponse","preflightBrowserEnvironmentCheck","interactionType","setInteractionInProgress","clearCache","hydrateCache"],"sourceRoot":"webpack:///","sources":["./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs","./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs","./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs","./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs","./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar BridgeStatusCode;\n(function (BridgeStatusCode) {\n    BridgeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\n    BridgeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\n    BridgeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\n    BridgeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\n    BridgeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\n    BridgeStatusCode[\"DISABLED\"] = \"DISABLED\";\n    BridgeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\n    BridgeStatusCode[\"NESTED_APP_AUTH_UNAVAILABLE\"] = \"NESTED_APP_AUTH_UNAVAILABLE\";\n})(BridgeStatusCode || (BridgeStatusCode = {}));\n\nexport { BridgeStatusCode };\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\nimport { TimeUtils, AuthToken, AuthError, InteractionRequiredAuthError, ServerError, ClientAuthError, ClientAuthErrorCodes } from '@azure/msal-common';\nimport { isBridgeError } from '../BridgeError.mjs';\nimport { BridgeStatusCode } from '../BridgeStatusCode.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NestedAppAuthAdapter {\n    constructor(clientId, clientCapabilities, crypto, logger) {\n        this.clientId = clientId;\n        this.clientCapabilities = clientCapabilities;\n        this.crypto = crypto;\n        this.logger = logger;\n    }\n    toNaaSilentTokenRequest(request) {\n        let extraParams;\n        if (request.extraQueryParameters === undefined) {\n            extraParams = new Map();\n        }\n        else {\n            extraParams = new Map(Object.entries(request.extraQueryParameters));\n        }\n        /**\n         * Need to get information about the client to populate request correctly\n         * For example: client id, client capabilities\n         */\n        const tokenRequest = {\n            userObjectId: request.account?.homeAccountId,\n            clientId: this.clientId,\n            authority: request.authority,\n            scope: request.scopes.join(\" \"),\n            correlationId: request.correlationId !== undefined\n                ? request.correlationId\n                : this.crypto.createNewGuid(),\n            prompt: request.prompt !== undefined ? request.prompt : \"\",\n            claims: request.claims !== undefined ? request.claims : \"\",\n            authenticationScheme: request.authenticationScheme !== undefined\n                ? request.authenticationScheme\n                : \"\",\n            clientCapabilities: this.clientCapabilities,\n            extraParameters: extraParams,\n        };\n        return tokenRequest;\n    }\n    toNaaTokenRequest(request) {\n        let extraParams;\n        if (request.extraQueryParameters === undefined) {\n            extraParams = new Map();\n        }\n        else {\n            extraParams = new Map(Object.entries(request.extraQueryParameters));\n        }\n        const tokenRequest = {\n            userObjectId: request.account?.homeAccountId,\n            clientId: this.clientId,\n            authority: request.authority,\n            scope: request.scopes.join(\" \"),\n            correlationId: request.correlationId !== undefined\n                ? request.correlationId\n                : \"\",\n            prompt: request.prompt !== undefined ? request.prompt : \"\",\n            nonce: request.nonce !== undefined ? request.nonce : \"\",\n            claims: request.claims !== undefined ? request.claims : \"\",\n            state: request.state !== undefined ? request.state : \"\",\n            authenticationScheme: request.authenticationScheme !== undefined\n                ? request.authenticationScheme\n                : \"\",\n            clientCapabilities: undefined,\n            extraParameters: extraParams,\n        };\n        return tokenRequest;\n    }\n    fromNaaTokenResponse(request, response) {\n        const expiresOn = new Date(TimeUtils.nowSeconds() + (response.expires_in || 0) * 1000);\n        const account = this.fromNaaAccountInfo(response.account);\n        const authenticationResult = {\n            authority: response.account.environment,\n            uniqueId: response.account.homeAccountId,\n            tenantId: response.account.tenantId,\n            scopes: response.scope.split(\" \"),\n            account: this.fromNaaAccountInfo(response.account),\n            idToken: response.id_token !== undefined ? response.id_token : \"\",\n            idTokenClaims: account.idTokenClaims !== undefined\n                ? account.idTokenClaims\n                : {},\n            accessToken: response.access_token,\n            fromCache: true,\n            expiresOn: expiresOn,\n            tokenType: request.authenticationScheme !== undefined\n                ? request.authenticationScheme\n                : \"Bearer\",\n            correlationId: request.correlationId,\n            requestId: \"\",\n            extExpiresOn: expiresOn,\n            state: response.state,\n        };\n        return authenticationResult;\n    }\n    /*\n     *  export type AccountInfo = {\n     *     homeAccountId: string;\n     *     environment: string;\n     *     tenantId: string;\n     *     username: string;\n     *     localAccountId: string;\n     *     name?: string;\n     *     idToken?: string;\n     *     idTokenClaims?: TokenClaims & {\n     *         [key: string]:\n     *             | string\n     *             | number\n     *             | string[]\n     *             | object\n     *             | undefined\n     *             | unknown;\n     *     };\n     *     nativeAccountId?: string;\n     *     authorityType?: string;\n     * };\n     */\n    fromNaaAccountInfo(fromAccount) {\n        let tokenClaims;\n        if (fromAccount.idToken !== undefined) {\n            tokenClaims = AuthToken.extractTokenClaims(fromAccount.idToken, this.crypto.base64Decode);\n        }\n        else {\n            tokenClaims = undefined;\n        }\n        const account = {\n            homeAccountId: fromAccount.homeAccountId,\n            environment: fromAccount.environment,\n            tenantId: fromAccount.tenantId,\n            username: fromAccount.username,\n            localAccountId: fromAccount.localAccountId,\n            name: fromAccount.name,\n            idToken: fromAccount.idToken,\n            idTokenClaims: tokenClaims,\n        };\n        return account;\n    }\n    /**\n     *\n     * @param error BridgeError\n     * @returns AuthError, ClientAuthError, ClientConfigurationError, ServerError, InteractionRequiredError\n     */\n    fromBridgeError(error) {\n        if (isBridgeError(error)) {\n            switch (error.status) {\n                case BridgeStatusCode.USER_CANCEL:\n                    return new ClientAuthError(ClientAuthErrorCodes.userCanceled);\n                case BridgeStatusCode.NO_NETWORK:\n                    return new ClientAuthError(ClientAuthErrorCodes.noNetworkConnectivity);\n                case BridgeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return new ClientAuthError(ClientAuthErrorCodes.noAccountFound);\n                case BridgeStatusCode.DISABLED:\n                    return new ClientAuthError(ClientAuthErrorCodes.nestedAppAuthBridgeDisabled);\n                case BridgeStatusCode.NESTED_APP_AUTH_UNAVAILABLE:\n                    return new ClientAuthError(error.code, error.description);\n                case BridgeStatusCode.TRANSIENT_ERROR:\n                case BridgeStatusCode.PERSISTENT_ERROR:\n                    return new ServerError(error.code, error.description);\n                case BridgeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(error.code, error.description);\n                default:\n                    return new AuthError(error.code, error.description);\n            }\n        }\n        else {\n            return new AuthError(\"unknown_error\", \"An unknown error occurred\");\n        }\n    }\n}\n\nexport { NestedAppAuthAdapter };\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isBridgeError(error) {\n    return error.status !== undefined;\n}\n\nexport { isBridgeError };\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\nimport { AuthError } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * NestedAppAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst NestedAppAuthErrorMessage = {\n    unsupportedMethod: {\n        code: \"unsupported_method\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\",\n    },\n};\nclass NestedAppAuthError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        Object.setPrototypeOf(this, NestedAppAuthError.prototype);\n        this.name = \"NestedAppAuthError\";\n    }\n    static createUnsupportedError() {\n        return new NestedAppAuthError(NestedAppAuthErrorMessage.unsupportedMethod.code, NestedAppAuthErrorMessage.unsupportedMethod.desc);\n    }\n}\n\nexport { NestedAppAuthError, NestedAppAuthErrorMessage };\n","/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, PerformanceEvents } from '@azure/msal-common';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\nimport { NestedAppAuthAdapter } from '../naa/mapping/NestedAppAuthAdapter.mjs';\nimport { NestedAppAuthError } from '../error/NestedAppAuthError.mjs';\nimport { EventHandler } from '../event/EventHandler.mjs';\nimport { EventType } from '../event/EventType.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NestedAppAuthController {\n    constructor(operatingContext) {\n        this.operatingContext = operatingContext;\n        const proxy = this.operatingContext.getBridgeProxy();\n        if (proxy !== undefined) {\n            this.bridgeProxy = proxy;\n        }\n        else {\n            throw new Error(\"unexpected: bridgeProxy is undefined\");\n        }\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n        // Initialize the crypto class.\n        this.browserCrypto = operatingContext.isBrowserEnvironment()\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n        this.nestedAppAuthAdapter = new NestedAppAuthAdapter(this.config.auth.clientId, this.config.auth.clientCapabilities, this.browserCrypto, this.logger);\n    }\n    getBrowserStorage() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    getEventHandler() {\n        return this.eventHandler;\n    }\n    static async createController(operatingContext) {\n        const controller = new NestedAppAuthController(operatingContext);\n        return Promise.resolve(controller);\n    }\n    initialize() {\n        // do nothing not required by this controller\n        return Promise.resolve();\n    }\n    async acquireTokenInteractive(request) {\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, request.correlationId);\n        atPopupMeasurement?.add({ nestedAppAuthRequest: true });\n        try {\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n            const response = await this.bridgeProxy.getTokenInteractive(naaRequest);\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response);\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            atPopupMeasurement.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            atPopupMeasurement.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        }\n        catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            atPopupMeasurement.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        }\n    }\n    async acquireTokenSilentInternal(request) {\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, request.correlationId);\n        ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        ssoSilentMeasurement?.add({\n            nestedAppAuthRequest: true,\n        });\n        try {\n            const naaRequest = this.nestedAppAuthAdapter.toNaaSilentTokenRequest(request);\n            const response = await this.bridgeProxy.getTokenSilent(naaRequest);\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response);\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, result);\n            ssoSilentMeasurement?.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            ssoSilentMeasurement?.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        }\n        catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, e);\n            ssoSilentMeasurement?.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        }\n    }\n    async acquireTokenPopup(request) {\n        return this.acquireTokenInteractive(request);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenRedirect(request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    async acquireTokenSilent(silentRequest) {\n        return this.acquireTokenSilentInternal(silentRequest);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenByCode(request // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenNative(request, apiId, // eslint-disable-line @typescript-eslint/no-unused-vars\n    accountId // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenByRefreshToken(commonRequest, // eslint-disable-line @typescript-eslint/no-unused-vars\n    silentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.eventHandler.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addPerformanceCallback(callback) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removePerformanceCallback(callbackId) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    enableAccountStorageEvents() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    disableAccountStorageEvents() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccount(accountFilter) {\n        throw NestedAppAuthError.createUnsupportedError();\n        // TODO: Look at standard implementation\n    }\n    getAccountByHomeId(homeAccountId) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.homeAccountId === homeAccountId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountByLocalId(localId) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.localAccountId === localId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAccountByUsername(userName) {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.username === userName) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    getAllAccounts() {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return [\n                this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount),\n            ];\n        }\n        else {\n            return [];\n        }\n    }\n    handleRedirectPromise(hash // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    loginPopup(request // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        if (request !== undefined) {\n            return this.acquireTokenInteractive(request);\n        }\n        else {\n            throw NestedAppAuthError.createUnsupportedError();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    loginRedirect(request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    logout(logoutRequest) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutRedirect(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutPopup(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    ssoSilent(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        return this.acquireTokenSilentInternal(request);\n    }\n    getTokenCache() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.logger;\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setActiveAccount(account) {\n        /*\n         * StandardController uses this to allow the developer to set the active account\n         * in the nested app auth scenario the active account is controlled by the app hosting the nested app\n         */\n        this.logger.warning(\"nestedAppAuth does not support setActiveAccount\");\n        return;\n    }\n    getActiveAccount() {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n        }\n        else {\n            return null;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initializeWrapperLibrary(sku, version) {\n        /*\n         * Standard controller uses this to set the sku and version of the wrapper library in the storage\n         * we do nothing here\n         */\n        return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNavigationClient(navigationClient) {\n        this.logger.warning(\"setNavigationClient is not supported in nested app auth\");\n    }\n    getConfiguration() {\n        return this.config;\n    }\n    isBrowserEnv() {\n        return this.operatingContext.isBrowserEnvironment();\n    }\n    getBrowserCrypto() {\n        return this.browserCrypto;\n    }\n    getPerformanceClient() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    getRedirectResponse() {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    preflightBrowserEnvironmentCheck(interactionType, // eslint-disable-line @typescript-eslint/no-unused-vars\n    setInteractionInProgress // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async clearCache(logoutRequest) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async hydrateCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    result, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    request) {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n}\n\nexport { NestedAppAuthController };\n"],"x_google_ignoreList":[0,1,2,3,4]}